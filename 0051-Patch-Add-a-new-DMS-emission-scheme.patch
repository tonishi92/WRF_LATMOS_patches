From f53ff3859421409f8662c3ad1cd60416272bfae4 Mon Sep 17 00:00:00 2001
From: Tatsuo ONISHI <onishi@latmos.ipsl.fr>
Date: Fri, 9 Dec 2022 17:31:55 +0100
Subject: [PATCH 51/70] (Patch) Add a new DMS emission scheme
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

TYPE : Patch application

Description:
  See the description below in the original patch

List of modified files in this commit:
  * Registry/registry.chem
  * chem/chemics_init.F
  * chem/depend.chem
  * chem/module_nightingale_dmsemis.F

List of files modified in the original patch, but not in this commit
  * chem/Makefile_org
  * chem/emissions_driver.F

===== Original Patch ========================================================
In order to avoid a confusion, '=== ' is placed at the beginning of each line

=== From 2db17c0da332f35761b63e9d5ab387c17100ea4f Mon Sep 17 00:00:00 2001
=== From: Louis Marelle <louis.marelle@latmos.ipsl.fr>
=== Date: Mon, 22 Oct 2018 21:56:34 +0200
=== Subject: [PATCH 21/36] Add a new DMS emission scheme
===
=== Adds a new module for DMS emissions, module_nightingale_dmsemis. These DMS
=== emissions are based on Nightingale et al. (2000) and Saltzman et al.  (1993).
=== The scheme requires a 2D input for surface DMS oceanic content, e_dms_oc,
=== stored in emis_ant (wrfchemi_* files). These values can be recovered from the
=== climatology of Lana et al.(2011).  This DMS emission option is selected with
=== dmsemis_opt = 2 This  should work with all schemes that include a "dms" tracer
=== in chem. However, using this scheme with a new gas phase mechanism requires to
=== update the relevant emis_ant packages (emiss_opt in registry.chem) and to
=== update chemics_init as well (for now, chemics_init checks that emiss_opt = 13
=== or 10 when dmsemis_opt = 2 and calls wrf_error_fatal otherwise.
=== ---
===  Registry/registry.chem            |   9 +-
===  chem/Makefile                     |   1 +
===  chem/chemics_init.F               |   7 ++
===  chem/depend.chem                  |   4 +-
===  chem/emissions_driver.F           |   9 ++
===  chem/module_nightingale_dmsemis.F | 140 ++++++++++++++++++++++++++++++
===  6 files changed, 167 insertions(+), 3 deletions(-)
===  create mode 100644 chem/module_nightingale_dmsemis.F
===
=== diff --git a/Registry/registry.chem b/Registry/registry.chem
=== index 4e435522..45896f74 100644
=== --- a/Registry/registry.chem
=== +++ b/Registry/registry.chem
=== @@ -91,6 +91,9 @@ state    real  e_so4i         i+jf     emis_ant     1         Z      i5r     "E_
===  state    real  e_so4j         i+jf     emis_ant     1         Z      i5r     "E_SO4J"              "EMISSION RATE OF J-MODE ORG. AER."   "ug/m3 m/s"
===  state    real  e_no3i         i+jf     emis_ant     1         Z      i5r     "E_NO3I"              "EMISSION RATE OF I-MODE ORG. AER."   "ug/m3 m/s"
===  state    real  e_no3j         i+jf     emis_ant     1         Z      i5r     "E_NO3J"              "EMISSION RATE OF J-MODE ORG. AER."   "ug/m3 m/s"
=== +#LMarelle: Additional DMS oceanic content for DMS emissions. This should be
=== +#somewhere else than emis_ant at some point since this is not anthropogenic
=== +state    real  e_dms_oc       i+jf     emis_ant     1         Z      i5r     "E_DMS_OC"            "OCEANIC SURFACE DMS CONTENT"          "mol/m3"
===  # Additional MOZART emission variables...
===  state    real  e_nh4i         i+jf     emis_ant     1         Z      i5r     "E_NH4I"              "EMISSION RATE OF I-MODE ORG. AER."   "ug/m3 m/s"
===  state    real  e_nh4j         i+jf     emis_ant     1         Z      i5r     "E_NH4J"              "EMISSION RATE OF J-MODE ORG. AER."   "ug/m3 m/s"
=== @@ -4087,9 +4090,10 @@ package   mozem           emiss_opt==7                   -             emis_ant:
===  package   mozcem          emiss_opt==8                   -             emis_ant:e_co,e_no,e_no2,e_bigalk,e_bigene,e_c2h4,e_c2h5oh,e_c2h6,e_c3h6,e_c3h8,e_ch2o,e_ch3cho,e_ch3coch3,e_ch3oh,e_mek,e_so2,e_toluene,e_nh3,e_isop,e_c10h16,e_pm_10,e_pm_25,e_bc,e_oc,e_sulf
===  package   cammam          emiss_opt==9                   -             emis_ant:e_iso,e_so2,e_no,e_co,e_eth,e_hc3,e_hc5,e_hc8,e_xyl,e_ol2,e_olt,e_oli,e_tol,e_csl,e_hcho,e_ald,e_ket,e_ora2,e_nh3,e_dms,e_ecj,e_orgj,e_so4i,e_so4j,e_soag_bigene,e_soag_isoprene,e_soag_terpene,e_soag_toluene,e_dust_a1,e_dust_a3,e_ncl_a1,e_ncl_a2,e_ncl_a3,e_orgj_num,e_ecj_num,e_so4j_num,e_so4i_num
===
=== -package   mozmem           emiss_opt==10                   -             emis_ant:e_co,e_no,e_no2,e_bigalk,e_bigene,e_c2h4,e_c2h5oh,e_c2h6,e_c3h6,e_c3h8,e_ch2o,e_ch3cho,e_ch3coch3,e_ch3oh,e_mek,e_so2,e_toluene,e_benzene,e_xylene,e_nh3,e_isop,e_apin,e_pm25i,e_pm25j,e_eci,e_ecj,e_orgi,e_orgj,e_so4i,e_so4j,e_no3i,e_no3j,e_nh4i,e_nh4j,e_nai,e_naj,e_cli,e_clj,e_co_a,e_orgi_a,e_orgj_a,e_co_bb,e_orgi_bb,e_orgj_bb,e_pm_10,e_c2h2,e_gly,e_sulf,e_macr,e_mgly,e_mvk,e_hcooh,e_hono
=== +package   mozmem           emiss_opt==10                   -             emis_ant:e_co,e_no,e_no2,e_bigalk,e_bigene,e_c2h4,e_c2h5oh,e_c2h6,e_c3h6,e_c3h8,e_ch2o,e_ch3cho,e_ch3coch3,e_ch3oh,e_mek,e_so2,e_toluene,e_benzene,e_xylene,e_nh3,e_isop,e_apin,e_pm25i,e_pm25j,e_eci,e_ecj,e_orgi,e_orgj,e_so4i,e_so4j,e_no3i,e_no3j,e_nh4i,e_nh4j,e_nai,e_naj,e_cli,e_clj,e_co_a,e_orgi_a,e_orgj_a,e_co_bb,e_orgi_bb,e_orgj_bb,e_pm_10,e_c2h2,e_gly,e_sulf,e_macr,e_mgly,e_mvk,e_hcooh,e_hono,e_dms_oc
===  package   mozc_t1_em      emiss_opt==11                  -             emis_ant:e_co,e_no,e_no2,e_bigalk,e_bigene,e_c2h4,e_c2h5oh,e_c2h6,e_c3h6,e_c3h8,e_ch2o,e_ch3cho,e_ch3coch3,e_ch3oh,e_mek,e_so2,e_toluene,e_nh3,e_isop,e_hcooh,e_ch3cn,e_ch3cooh,e_hcn,e_apin,e_mvk,e_mgly,e_benzene,e_xylene,e_sulf,e_c2h2,e_pm_10,e_pm_25,e_bc,e_oc
=== -package   esaprcnov       emiss_opt==13                  -             emis_ant:e_so2,e_c2h6,e_c3h8,e_c2h2,e_alk3,e_alk4,e_alk5,e_ethene,e_c3h6,e_ole1,e_ole2,e_aro1,e_aro2,e_hcho,e_ccho,e_rcho,e_acet,e_mek,e_isoprene,e_terp,e_sesq,e_co,e_no,e_no2,e_phen,e_cres,e_meoh,e_gly,e_mgly,e_bacl,e_isoprod,e_methacro,e_mvk,e_prod2,e_ch4,e_bald,e_hcooh,e_cco_oh,e_rco_oh,e_nh3,e_pm25i,e_pm25j,e_eci,e_ecj,e_orgi,e_orgj,e_so4i,e_so4j,e_no3i,e_no3j,e_orgi_a,e_orgj_a,e_orgi_bb,e_orgj_bb
=== +#LMarelle: Add e_dms_oc, DMS oceanic content in mol/m3 (technically, this should not be in emis_ant)
=== +package   esaprcnov       emiss_opt==13                  -             emis_ant:e_so2,e_c2h6,e_c3h8,e_c2h2,e_alk3,e_alk4,e_alk5,e_ethene,e_c3h6,e_ole1,e_ole2,e_aro1,e_aro2,e_hcho,e_ccho,e_rcho,e_acet,e_mek,e_isoprene,e_terp,e_sesq,e_co,e_no,e_no2,e_phen,e_cres,e_meoh,e_gly,e_mgly,e_bacl,e_isoprod,e_methacro,e_mvk,e_prod2,e_ch4,e_bald,e_hcooh,e_cco_oh,e_rco_oh,e_nh3,e_pm25i,e_pm25j,e_eci,e_ecj,e_orgi,e_orgj,e_so4i,e_so4j,e_no3i,e_no3j,e_orgi_a,e_orgj_a,e_orgi_bb,e_orgj_bb,e_dms_oc
===  # For CB05 mechanism based on CBMZ speciation, used with emiss_inpt_opt = 102
===  package   ecb05_opt1      emiss_opt==14                   -             emis_ant:e_no2,e_xyl,e_tol,e_terp,e_so2,e_ora2,e_olt,e_oli,e_ol2,e_no,e_nh3,e_iso,e_hcl,e_hcho,e_eth,e_csl,e_co,e_ch3oh,e_c2h5oh,e_ald,e_aldx,e_hc3,e_hc5,e_hc8,e_ket,e_pm25i,e_pm25j,e_eci,e_ecj,e_orgi,e_orgj,e_so4i,e_so4j,e_no3i,e_no3j,e_so4c,e_no3c,e_orgc,e_ecc,e_pm10
===  # For CB05 emissions inventory base on CB05 speciation, used with emiss_inpt_opt = 101
=== @@ -4159,6 +4163,7 @@ package   shao_2011     dust_schme==3                -              emis_dust:ed
===  package   seasgocart    seas_opt==1                  -              emis_seas:eseas1,eseas2,eseas3,eseas4
===  package   seasmosaic    seas_opt==2                  -              emis_seas2:eseasj,eseasc
===  package   dmsgocart    dmsemis_opt==1                  -              -
=== +package   dms_nightingale  dmsemis_opt==2               -             -
===  package   volume_approx    aer_op_opt==1                -             -
===  package   maxwell_approx   aer_op_opt==2                -             -
===  package   volume_exact     aer_op_opt==3                -             -
=== diff --git a/chem/Makefile b/chem/Makefile
=== index f9533518..1dec0b70 100755
=== --- a/chem/Makefile
=== +++ b/chem/Makefile
=== @@ -86,6 +86,7 @@ MODULES =                                 \
===          module_dust_load.o                \
===          module_uoc_dustwd.o               \
===          module_data_uoc_wd.o              \
=== +	module_nightingale_dmsemis.o      \
===          module_mosaic_addemiss.o          \
===          module_mosaic_initmixrats.o       \
===          module_mosaic_support.o           \
=== diff --git a/chem/chemics_init.F b/chem/chemics_init.F
=== index bc7f8529..702641e8 100755
=== --- a/chem/chemics_init.F
=== +++ b/chem/chemics_init.F
=== @@ -435,6 +435,13 @@ call wrf_message("**************************************************************
===        call wrf_error_fatal( trim(message_txt) )
===     endif
===
=== +   !LMarelle: Add a condition on emiss_opt for Nightingale DMS emissions
=== +   if ( config_flags%dmsemis_opt == 2 .and. (config_flags%emiss_opt /= 13 &
=== +        .and. config_flags%emiss_opt /= 10) ) then
=== +      call wrf_error_fatal ('chemics_init: error, nightingale_dmsemis (dmsemis_opt = 2) &
=== +                            requires e_dms_oc to be defined in emis_ant (emiss_opt = 13 or 10)')
=== +   endif
=== +
===      IF ( config_flags%chem_opt == 0 .AND. config_flags%aer_ra_feedback .NE. 0 ) THEN
===  !       config_flags%aer_ra_feedback = 0
===          call wrf_error_fatal(" ERROR: CHEM_INIT: FOR CHEM_OPT = 0, AER_RA_FEEDBACK MUST = 0 ")
=== diff --git a/chem/depend.chem b/chem/depend.chem
=== index 228058e5..0997b3fa 100644
=== --- a/chem/depend.chem
=== +++ b/chem/depend.chem
=== @@ -79,6 +79,8 @@ module_wetdep_ls.o:
===
===  module_gocart_dmsemis.o: module_data_gocartchem.o
===
=== +module_nightingale_dmsemis.o: module_data_radm2.o
=== +
===  module_data_cbmz.o: module_peg_util.o
===
===  module_peg_util.o:
=== @@ -354,7 +356,7 @@ mechanism_driver.o: module_data_radm2.o module_radm.o module_aerosols_sorgam.o m
===
===  optical_driver.o: module_optical_averaging.o module_peg_util.o module_data_mosaic_therm.o
===
=== -emissions_driver.o: module_add_emiss_burn.o module_data_radm2.o module_radm.o module_bioemi_simple.o module_bioemi_beis314.o module_bioemi_megan2.o module_emissions_anthropogenics.o module_cbmz_addemiss.o module_cb05_addemiss.o module_mosaic_addemiss.o module_aerosols_sorgam.o module_aerosols_soa_vbs.o module_aerosols_sorgam_vbs.o module_plumerise1.o module_gocart_dust.o module_gocart_dust_afwa.o module_uoc_dust.o module_gocart_seasalt.o module_ghg_fluxes.o module_lightning_nox_driver.o module_cam_mam_addemiss.o
=== +emissions_driver.o: module_add_emiss_burn.o module_data_radm2.o module_radm.o module_bioemi_simple.o module_bioemi_beis314.o module_bioemi_megan2.o module_emissions_anthropogenics.o module_cbmz_addemiss.o module_cb05_addemiss.o module_mosaic_addemiss.o module_aerosols_sorgam.o module_aerosols_soa_vbs.o module_aerosols_sorgam_vbs.o module_plumerise1.o module_gocart_dust.o module_gocart_dust_afwa.o module_uoc_dust.o module_gocart_seasalt.o module_ghg_fluxes.o module_lightning_nox_driver.o module_cam_mam_addemiss.o module_nightingale_dmsemis.o
===
===  dry_dep_driver.o: module_data_radm2.o module_aer_drydep.o module_dep_simple.o module_aerosols_sorgam.o module_aerosols_soa_vbs.o module_aerosols_sorgam_vbs.o module_mosaic_drydep.o module_mixactivate_wrappers.o ../phys/module_mixactivate.o module_cam_mam_drydep.o ../phys/module_data_cam_mam_asect.o ../phys/module_data_cam_mam_aero.o ../phys/module_cam_support.o
===
=== diff --git a/chem/emissions_driver.F b/chem/emissions_driver.F
=== index ef1c47ea..19a35db0 100644
=== --- a/chem/emissions_driver.F
=== +++ b/chem/emissions_driver.F
=== @@ -93,6 +93,7 @@ CONTAINS
===    USE gocart_dust
===    USE gocart_dust_afwa
===    USE gocart_seasalt
=== +  USE module_nightingale_dmsemis, only: nightingale_dmsemis
===    USE uoc_dust
===    USE module_dms_emis
===    USE module_mosaic_addemiss
=== @@ -778,6 +779,14 @@ CONTAINS
===           ids,ide, jds,jde, kds,kde,                                        &
===           ims,ime, jms,jme, kms,kme,                                        &
===           its,ite, jts,jte, kts,kte                                         )
=== +      CASE (DMS_NIGHTINGALE)
=== +        CALL wrf_debug(15,'Nightingale dms emissions')
=== +        call nightingale_dmsemis( id, dtstep, dz8w, config_flags,   &
=== +         u_phy, v_phy, rho_phy, chem,emis_ant,alt,                  &
=== +         u10, v10, xland, tsk,                                      &
=== +         ids,ide, jds,jde, kds,kde,                                 &
=== +         ims,ime, jms,jme, kms,kme,                                 &
=== +         its,ite, jts,jte, kts,kte                                  )
===        CASE DEFAULT
===          CALL wrf_debug(15,'no dms emissions')
===        END SELECT dms_select
=== diff --git a/chem/module_nightingale_dmsemis.F b/chem/module_nightingale_dmsemis.F
=== new file mode 100644
=== index 00000000..687eb01c
=== --- /dev/null
=== +++ b/chem/module_nightingale_dmsemis.F
=== @@ -0,0 +1,140 @@
=== +! 2018/10/04 Louis Marelle
=== +! Compute DMS emissions and add them to chem(:,:,:,p_dms)
=== +! I developed this for CBMZ_MOSAIC with DMS and SAPRC_MOSAIC with DMS reactions
=== +! added to KPP, but this should work for any mechanism where DMS is defined in
=== +! chem. However, if someone tries to use this option with another mechanism I
=== +! included a call to WRF_FATAL in chemics_init.F.
=== +! This routines requires that e_dms_oc, the oceanic dms content, is
=== +! present in emis_ant (read from the wrfchemi files). This is checked in
=== +! chem_init.F
=== +!
=== +! This routine needs dms oceanic content as an input, read in wrfchemi files
=== +! (emis_ant) for now. This oceanic content can be overwritten by another
=== +! value here if needed (dms_ocean_sfc), see below.
=== +!
=== +! This module is based on module_cbmz_addemiss.F
=== +!
=== +! This code was developped for the following publication, also showing tests in
=== +! the Arctic:
=== +! Marelle, L., J.-C. Raut, K. S. Law, L. K. Berg, J. D. Fast, R. C. Easter, M.
=== +! Shrivastava, and J. L. Thomas (2017), Improvements to the WRF-Chem 3.5.1 model
=== +! for quasi- hemispheric simulations of aerosols and ozone in the Arctic,
=== +! Geoscientific Model Devel- opment, 10(10), 3661–3677,
=== +! doi:10.5194/gmd-10-3661-2017.
=== +
=== +MODULE module_nightingale_dmsemis
=== +
=== +CONTAINS
=== +
=== +!----------------------------------------------------------------------
=== +   subroutine nightingale_dmsemis( id, dtstep, dz8w, config_flags,              &
=== +               u_phy, v_phy, rho_phy, chem, emis_ant, alt,                &
=== +               u10, v10, xland, tsk,                                      &
=== +               ids,ide, jds,jde, kds,kde,                                 &
=== +               ims,ime, jms,jme, kms,kme,                                 &
=== +               its,ite, jts,jte, kts,kte                                  )
=== +!
=== +! calculates and adds emissions to dms in chem
=== +! (i.e., emissions tendencies over time dtstep are applied
=== +! to the trace gas concentrations)
=== +!
=== +
=== +  USE module_configure
=== +  USE module_state_description
=== +  USE module_data_radm2
=== +
=== +  IMPLICIT NONE
=== +
=== +   TYPE(grid_config_rec_type),  INTENT(IN   )    :: config_flags
=== +
=== +   INTEGER,      INTENT(IN   ) :: id,                                      &
=== +                                  ids,ide, jds,jde, kds,kde,               &
=== +                                  ims,ime, jms,jme, kms,kme,               &
=== +                                  its,ite, jts,jte, kts,kte
=== +
=== +   REAL, INTENT(IN   ) ::    dtstep
=== +
=== +! trace species mixing ratios (gases=ppm)
=== +   REAL, DIMENSION( ims:ime, kms:kme, jms:jme, num_chem ),                 &
=== +         INTENT(INOUT ) ::   chem
=== +!
=== +! emissions arrays (v.1: ppm m/min; v.2: mole km^-2 hr^-1)
=== +!
=== +!   REAL, DIMENSION( ims:ime, kms:kme, jms:jme ),                          &
=== +   REAL, DIMENSION( ims:ime, kms:config_flags%kemit, jms:jme,num_emis_ant),&
=== +         INTENT(IN ) ::                                                    &
=== +                         emis_ant
=== +! layer thickness (m)
=== +   REAL,  DIMENSION( ims:ime , kms:kme , jms:jme )         ,               &
=== +          INTENT(IN   ) ::   dz8w, rho_phy,alt, u_phy, v_phy
=== +
=== +   REAL,  DIMENSION( ims:ime , jms:jme )         ,               &
=== +          INTENT(IN   ) ::   u10, v10, xland, tsk
=== +
=== +! local variables
=== +   integer :: i,j,k
=== +   real :: conv
=== +! dms_ocean_sfc surface oceanic dms content in mol/m^3, e.g.  Lana et. al 2011
=== +! dms_ocean_sfc is overwritten by the value in the wrfchemi emission files
=== +! sc_co2 schmidt number for co2 at 20°C = 600 (reference value)
=== +   real :: w10, dms_emi, k_dms, dms_ocean_sfc = 0.0, sc_co2 = 600.0, sc_dms, &
=== +                sst_ij_cels
=== +
=== +!
=== +! add emissions
=== +!
=== +
=== +   do j=jts,jte
=== +      do i=its,ite
=== +
=== +         conv = 4.828e-4 / rho_phy(i,kts,j) * dtstep / (dz8w(i,kts,j) * 60.)
=== +
=== +         ! Nightingale et al., 2000 parameterization using a Schmidt number
=== +         ! for DMS depending on the actual SST
=== +             ! only over open water (xland>1.5)
=== +             if (xland(i,j) .gt. 1.5) then
=== +
=== +                 ! Wind speed in m s-1
=== +                 w10 = sqrt( u10(i,j) ** 2.0 + v10(i,j) ** 2.0 )
=== +
=== +                 ! we donṫ trust the u10,v10 values, is model layers are very
=== +                 ! thin near surface (this recommandation is from the gocart modules)
=== +                 if ( dz8w(i,kts,j) .lt. 12.) &
=== +                   w10 = sqrt( u_phy(i,kts,j) * u_phy(i,kts,j) + v_phy(i,kts,j) * v_phy(i,kts,j) )
=== +
=== +                 ! Convert sst (=tskin at sea surface) to celsius. The Schmidt
=== +                 ! number parameterization is only valid between 5 and 30 °C,
=== +                 ! so constrain the SST between these two values
=== +                 sst_ij_cels = ( tsk(i,j) - 273.15 )
=== +                 if (sst_ij_cels < 5.0) sst_ij_cels = 5.0
=== +                 if (sst_ij_cels > 30.0) sst_ij_cels = 30.0
=== +
=== +                 ! Schmidt number for DMS, using the sst in celsius, from
=== +                 ! Saltzman et al., 1993
=== +                 sc_dms = 2674.0 - 147.12 * sst_ij_cels + 3.726 * sst_ij_cels ** 2.0 &
=== +                             - 0.038 * sst_ij_cels ** 3
=== +
=== +                 ! Sea - air exchange coefficient from Nightingale et al. 2000,
=== +                 ! and unit change from cm hr-1 to m s-1
=== +                 k_dms = ( 0.222 * w10**2 + 0.333 * w10) * (sc_dms / sc_co2)**(-0.5) / 3600. / 100.
=== +
=== +                 ! This can be commented in order to use a single
=== +                 ! (0D) hardcoded value of dms_ocean_sfc if needed
=== +                 dms_ocean_sfc=emis_ant(i,1,j,p_e_dms_oc)
=== +
=== +                 ! DMS emission flux in SI units (mol m-2 s-1)
=== +                 dms_emi = k_dms * dms_ocean_sfc
=== +                 ! Change to  WRF-Chem units (mol km-2 hr-1)
=== +                 dms_emi = dms_emi * 1.0E6 * 3600.0
=== +
=== +                 ! Add emissions to chem, at the surface (k==kts)
=== +                 chem(i,kts,j,p_dms)  =  chem(i,kts,j,p_dms)               &
=== +                             +dms_emi*conv
=== +
=== +             end if !xland .gt 1.5, over open water
=== +      end do
=== +   end do
=== +
=== +END subroutine nightingale_dmsemis
=== +
=== +END MODULE module_nightingale_dmsemis
=== --
=== 2.31.1
===
---
 Registry/registry.chem            |  2 +-
 chem/chemics_init.F               | 17 ++++++++++----
 chem/depend.chem                  |  4 +++-
 chem/module_nightingale_dmsemis.F | 38 +++++++++++++++++++------------
 4 files changed, 40 insertions(+), 21 deletions(-)

diff --git a/Registry/registry.chem b/Registry/registry.chem
index 180c40f..b8d94c9 100644
--- a/Registry/registry.chem
+++ b/Registry/registry.chem
@@ -4339,7 +4339,7 @@ package   mozem           emiss_opt==7                   -             emis_ant:
 package   mozcem          emiss_opt==8                   -             emis_ant:e_co,e_no,e_no2,e_bigalk,e_bigene,e_c2h4,e_c2h5oh,e_c2h6,e_c3h6,e_c3h8,e_ch2o,e_ch3cho,e_ch3coch3,e_ch3oh,e_mek,e_so2,e_toluene,e_nh3,e_isop,e_c10h16,e_pm_10,e_pm_25,e_bc,e_oc,e_sulf
 package   cammam          emiss_opt==9                   -             emis_ant:e_iso,e_so2,e_no,e_co,e_eth,e_hc3,e_hc5,e_hc8,e_xyl,e_ol2,e_olt,e_oli,e_tol,e_csl,e_hcho,e_ald,e_ket,e_ora2,e_nh3,e_dms,e_ecj,e_orgj,e_so4i,e_so4j,e_soag_bigene,e_soag_isoprene,e_soag_terpene,e_soag_toluene,e_dust_a1,e_dust_a3,e_ncl_a1,e_ncl_a2,e_ncl_a3,e_orgj_num,e_ecj_num,e_so4j_num,e_so4i_num
 
-package   mozmem           emiss_opt==10                   -             emis_ant:e_co,e_no,e_no2,e_bigalk,e_bigene,e_c2h4,e_c2h5oh,e_c2h6,e_c3h6,e_c3h8,e_ch2o,e_ch3cho,e_ch3coch3,e_ch3oh,e_mek,e_so2,e_toluene,e_benzene,e_xylene,e_nh3,e_isop,e_apin,e_pm25i,e_pm25j,e_eci,e_ecj,e_orgi,e_orgj,e_so4i,e_so4j,e_no3i,e_no3j,e_nh4i,e_nh4j,e_nai,e_naj,e_cli,e_clj,e_co_a,e_orgi_a,e_orgj_a,e_co_bb,e_orgi_bb,e_orgj_bb,e_pm_10,e_c2h2,e_gly,e_sulf,e_macr,e_mgly,e_mvk,e_hcooh,e_hono
+package   mozmem           emiss_opt==10                   -             emis_ant:e_co,e_no,e_no2,e_bigalk,e_bigene,e_c2h4,e_c2h5oh,e_c2h6,e_c3h6,e_c3h8,e_ch2o,e_ch3cho,e_ch3coch3,e_ch3oh,e_mek,e_so2,e_toluene,e_benzene,e_xylene,e_nh3,e_isop,e_apin,e_pm25i,e_pm25j,e_eci,e_ecj,e_orgi,e_orgj,e_so4i,e_so4j,e_no3i,e_no3j,e_nh4i,e_nh4j,e_nai,e_naj,e_cli,e_clj,e_co_a,e_orgi_a,e_orgj_a,e_co_bb,e_orgi_bb,e_orgj_bb,e_pm_10,e_c2h2,e_gly,e_sulf,e_macr,e_mgly,e_mvk,e_hcooh,e_hono,e_dms_oc
 package   mozc_t1_em      emiss_opt==11                  -             emis_ant:e_co,e_no,e_no2,e_bigalk,e_bigene,e_c2h4,e_c2h5oh,e_c2h6,e_c3h6,e_c3h8,e_ch2o,e_ch3cho,e_ch3coch3,e_ch3oh,e_mek,e_so2,e_toluene,e_nh3,e_isop,e_hcooh,e_ch3cn,e_ch3cooh,e_hcn,e_apin,e_mvk,e_mgly,e_benzene,e_xylene,e_sulf,e_c2h2,e_pm_10,e_pm_25,e_bc,e_oc
 #lm Add e_dms_oc, DMS oceanic content in mol/m3 (technically, this should not be in emis_ant)
 package   esaprcnov       emiss_opt==13                  -             emis_ant:e_so2,e_c2h6,e_c3h8,e_c2h2,e_alk3,e_alk4,e_alk5,e_ethene,e_c3h6,e_ole1,e_ole2,e_aro1,e_aro2,e_hcho,e_ccho,e_rcho,e_acet,e_mek,e_isoprene,e_terp,e_sesq,e_co,e_no,e_no2,e_phen,e_cres,e_meoh,e_gly,e_mgly,e_bacl,e_isoprod,e_methacro,e_mvk,e_prod2,e_ch4,e_bald,e_hcooh,e_cco_oh,e_rco_oh,e_dms_oc,e_nh3,e_pm25i,e_pm25j,e_eci,e_ecj,e_orgi,e_orgj,e_so4i,e_so4j,e_no3i,e_no3j,e_orgi_a,e_orgj_a,e_orgi_bb,e_orgj_bb
diff --git a/chem/chemics_init.F b/chem/chemics_init.F
index 64b2eb4..af92bc7 100755
--- a/chem/chemics_init.F
+++ b/chem/chemics_init.F
@@ -489,12 +489,19 @@ call wrf_message("**************************************************************
       call wrf_error_fatal( trim(message_txt) )
    endif
 
-!lm Add this condition on emiss_opt for Nightingale DMS emissions
-   if ( config_flags%dmsemis_opt == 2 .and. (config_flags%emiss_opt /= 4 .and. config_flags%emiss_opt /= 13) ) then
-      call wrf_error_fatal (15,'chemics_init: error, nightingale_dmsemis (dmsemis_opt = 2) &
-                              requires e_dms_oc to be defined in emis_ant (emiss_opt = 4 or 13)')
+   !LMarelle: Add a condition on emiss_opt for Nightingale DMS emissions
+   if ( config_flags%dmsemis_opt == 2 .and. (config_flags%emiss_opt /= 13 &
+        .and. config_flags%emiss_opt /= 10) ) then
+      call wrf_error_fatal ('chemics_init: error, nightingale_dmsemis (dmsemis_opt = 2) &
+                            requires e_dms_oc to be defined in emis_ant (emiss_opt = 13 or 10)')
    endif
-!lm
+
+!!! !lm Add this condition on emiss_opt for Nightingale DMS emissions
+!!!    if ( config_flags%dmsemis_opt == 2 .and. (config_flags%emiss_opt /= 4 .and. config_flags%emiss_opt /= 13) ) then
+!!!       call wrf_error_fatal (15,'chemics_init: error, nightingale_dmsemis (dmsemis_opt = 2) &
+!!!                               requires e_dms_oc to be defined in emis_ant (emiss_opt = 4 or 13)')
+!!!    endif
+!!! !lm
 
     IF ( config_flags%chem_opt == 0 .AND. config_flags%aer_ra_feedback .NE. 0 ) THEN
 !       config_flags%aer_ra_feedback = 0
diff --git a/chem/depend.chem b/chem/depend.chem
index 049a2a8..79b05a7 100644
--- a/chem/depend.chem
+++ b/chem/depend.chem
@@ -79,6 +79,8 @@ module_wetdep_ls.o:
 
 module_gocart_dmsemis.o: module_data_gocartchem.o
 
+module_nightingale_dmsemis.o: module_data_radm2.o
+
 module_data_cbmz.o: module_peg_util.o
 
 module_peg_util.o:
@@ -354,7 +356,7 @@ mechanism_driver.o: module_data_radm2.o module_radm.o module_aerosols_sorgam.o m
 
 optical_driver.o: module_optical_averaging.o module_peg_util.o module_data_mosaic_therm.o
 
-emissions_driver.o: module_add_emiss_burn.o module_data_radm2.o module_radm.o module_bioemi_simple.o module_bioemi_beis314.o module_bioemi_megan2.o module_emissions_anthropogenics.o module_cbmz_addemiss.o module_cb05_addemiss.o module_mosaic_addemiss.o module_aerosols_sorgam.o module_aerosols_soa_vbs.o module_aerosols_sorgam_vbs.o module_plumerise1.o module_gocart_dust.o module_gocart_dust_afwa.o module_uoc_dust.o module_gocart_seasalt.o module_ghg_fluxes.o module_lightning_nox_driver.o module_cam_mam_addemiss.o
+emissions_driver.o: module_add_emiss_burn.o module_data_radm2.o module_radm.o module_bioemi_simple.o module_bioemi_beis314.o module_bioemi_megan2.o module_emissions_anthropogenics.o module_cbmz_addemiss.o module_cb05_addemiss.o module_mosaic_addemiss.o module_aerosols_sorgam.o module_aerosols_soa_vbs.o module_aerosols_sorgam_vbs.o module_plumerise1.o module_gocart_dust.o module_gocart_dust_afwa.o module_uoc_dust.o module_gocart_seasalt.o module_ghg_fluxes.o module_lightning_nox_driver.o module_cam_mam_addemiss.o module_nightingale_dmsemis.o
 
 dry_dep_driver.o: module_data_radm2.o module_aer_drydep.o module_dep_simple.o module_aerosols_sorgam.o module_aerosols_soa_vbs.o module_aerosols_sorgam_vbs.o module_mosaic_drydep.o module_mixactivate_wrappers.o ../phys/module_mixactivate.o module_cam_mam_drydep.o ../phys/module_data_cam_mam_asect.o ../phys/module_data_cam_mam_aero.o ../phys/module_cam_support.o
 
diff --git a/chem/module_nightingale_dmsemis.F b/chem/module_nightingale_dmsemis.F
index 5040153..687eb01 100644
--- a/chem/module_nightingale_dmsemis.F
+++ b/chem/module_nightingale_dmsemis.F
@@ -1,16 +1,26 @@
-! lm Louis Marelle 2015/4
+! 2018/10/04 Louis Marelle
 ! Compute DMS emissions and add them to chem(:,:,:,p_dms)
-! I developped this for CBMZ_MOSAIC with DMS and SAPRC_MOSAIC with DMS reactions
+! I developed this for CBMZ_MOSAIC with DMS and SAPRC_MOSAIC with DMS reactions
 ! added to KPP, but this should work for any mechanism where DMS is defined in
-! chem. This routines requires that e_dms_oc, the oceanic dms content, is
+! chem. However, if someone tries to use this option with another mechanism I
+! included a call to WRF_FATAL in chemics_init.F.
+! This routines requires that e_dms_oc, the oceanic dms content, is
 ! present in emis_ant (read from the wrfchemi files). This is checked in
-! chem_init
+! chem_init.F
 !
 ! This routine needs dms oceanic content as an input, read in wrfchemi files
 ! (emis_ant) for now. This oceanic content can be overwritten by another
 ! value here if needed (dms_ocean_sfc), see below.
 !
 ! This module is based on module_cbmz_addemiss.F
+!
+! This code was developped for the following publication, also showing tests in
+! the Arctic:
+! Marelle, L., J.-C. Raut, K. S. Law, L. K. Berg, J. D. Fast, R. C. Easter, M.
+! Shrivastava, and J. L. Thomas (2017), Improvements to the WRF-Chem 3.5.1 model
+! for quasi- hemispheric simulations of aerosols and ozone in the Arctic,
+! Geoscientific Model Devel- opment, 10(10), 3661–3677,
+! doi:10.5194/gmd-10-3661-2017.
 
 MODULE module_nightingale_dmsemis
 
@@ -25,7 +35,7 @@ CONTAINS
                its,ite, jts,jte, kts,kte                                  )
 !
 ! calculates and adds emissions to dms in chem
-! (i.e., emissions tendencies over time dtstep are applied 
+! (i.e., emissions tendencies over time dtstep are applied
 ! to the trace gas concentrations)
 !
 
@@ -70,16 +80,16 @@ CONTAINS
    real :: w10, dms_emi, k_dms, dms_ocean_sfc = 0.0, sc_co2 = 600.0, sc_dms, &
                 sst_ij_cels
 
-!       
+!
 ! add emissions
 !
 
-   do j=jts,jte  
-      do i=its,ite 
+   do j=jts,jte
+      do i=its,ite
 
          conv = 4.828e-4 / rho_phy(i,kts,j) * dtstep / (dz8w(i,kts,j) * 60.)
-         
-         ! Nightingale et al., 2000 parameterization using a Schmidt number 
+
+         ! Nightingale et al., 2000 parameterization using a Schmidt number
          ! for DMS depending on the actual SST
              ! only over open water (xland>1.5)
              if (xland(i,j) .gt. 1.5) then
@@ -92,8 +102,8 @@ CONTAINS
                  if ( dz8w(i,kts,j) .lt. 12.) &
                    w10 = sqrt( u_phy(i,kts,j) * u_phy(i,kts,j) + v_phy(i,kts,j) * v_phy(i,kts,j) )
 
-                 ! Convert sst (=tskin at sea surface) to celsius. The Schmidt 
-                 ! number parameterization is only valid between 5 and 30 °C, 
+                 ! Convert sst (=tskin at sea surface) to celsius. The Schmidt
+                 ! number parameterization is only valid between 5 and 30 °C,
                  ! so constrain the SST between these two values
                  sst_ij_cels = ( tsk(i,j) - 273.15 )
                  if (sst_ij_cels < 5.0) sst_ij_cels = 5.0
@@ -104,7 +114,7 @@ CONTAINS
                  sc_dms = 2674.0 - 147.12 * sst_ij_cels + 3.726 * sst_ij_cels ** 2.0 &
                              - 0.038 * sst_ij_cels ** 3
 
-                 ! Sea - air exchange coefficient from Nightingale et al. 2000, 
+                 ! Sea - air exchange coefficient from Nightingale et al. 2000,
                  ! and unit change from cm hr-1 to m s-1
                  k_dms = ( 0.222 * w10**2 + 0.333 * w10) * (sc_dms / sc_co2)**(-0.5) / 3600. / 100.
 
@@ -122,7 +132,7 @@ CONTAINS
                              +dms_emi*conv
 
              end if !xland .gt 1.5, over open water
-      end do 
+      end do
    end do
 
 END subroutine nightingale_dmsemis
-- 
2.31.1

