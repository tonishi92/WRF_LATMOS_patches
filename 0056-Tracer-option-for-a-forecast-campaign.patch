From f51934e6d7026b6e11a414f1fce9bc16da243446 Mon Sep 17 00:00:00 2001
From: tonishi92 <tatsuo.onishi@gmail.com>
Date: Wed, 5 Mar 2025 18:09:48 +0100
Subject: [PATCH] Tracer option for a forecast campaign: Changes applied to
 WRF_LATMOS
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Registry/registry.chem
  - Add ‘h’ to qlsink, precr, preci, precs, precg for uploading meteorological properties.
  - add e_tracer_1, e_tracer_2, …..,e_tracer_32
  - add ef_tracer_1, ef_tracer_2, …., ef_tracer_32
  - add tracer_1, tracer_2, …., tracer_32 in units “ug/kg-dryair”
  - add package  “chem_trace4” with “chem_opt == 19”
  - add package “etracer” with “emiss_opt==30”

chem/chem_driver.F
  - Add “CHEM_TRACE4” to a debug message “tracer mode”
  - Add “CHEM_TRACE4” to exclude in the calculation of aerosol optical properties for radiative effects
  - Add “CHEM_TRACE4” to exclude in the calculation of photolysis rate
  - Add “CHEM_TRACE4” to skip the rest of chem_driver after emissions and vertical mixing.

chem/dry_dep_driver.F
  - Add “CHEM_TRACE4” to skip “wesely_driver” (dry dep velocities with wesely method)

chem/emissions_driver.F
  - Add emissions for CHEM_TRACE4

chem/module_input_chem_data.F
  - No setup_gasprofile_map for CHEM_TRACE4
  - Initial interior value for tracer variables = 1.e-15 for CHEM_TRACE4
  - Set “i_bdy_method = 5” for CHEM_TRACE4 to call subroutine bdy_chem_value_tracer later
  - Set bdy chem value to 1.e-15 in subroutine bdy_chem_value_tracer

share/module_chem_share.F
  - Add “get_last_gas = p_tracer_ens” for CHEM_TRACE4
---
 Registry/registry.chem        | 141 +++++++++++++++++++++++------
 chem/chem_driver.F            |   5 +-
 chem/dry_dep_driver.F         |   1 +
 chem/emissions_driver.F       | 161 ++++++++++++++++++++++++++++++++++
 chem/module_input_chem_data.F |  99 ++++++++++++++++-----
 share/module_chem_share.F     |   9 +-
 6 files changed, 367 insertions(+), 49 deletions(-)

diff --git a/Registry/registry.chem b/Registry/registry.chem
index 127bd74e..7b1c8016 100644
--- a/Registry/registry.chem
+++ b/Registry/registry.chem
@@ -32,11 +32,11 @@ state    real    ccn5            ikj    misc        1         -      r        "c
 state    real    ccn6            ikj    misc        1         -      r        "ccn6"                "CCN concentration at S=1.0%"   "#/cm3"
 
 # cloud water fractional removal rate needed for wet scavenging
-state    real    qlsink          ikj    misc        1         -      rdu      "qlsink"              "CLOUD WATER SINK"               "/S"
-state    real    precr           ikj    misc        1         -      rdu      "precr"               "RAIN PRECIPITATION RATE"        "KG/M2/S"
-state    real    preci           ikj    misc        1         -      rdu      "preci"               "ICE PRECIPITATION RATE"         "KG/M2/S"
-state    real    precs           ikj    misc        1         -      rdu      "precs"               "SNOW PRECIPITATION RATE"        "KG/M2/S"
-state    real    precg           ikj    misc        1         -      rdu      "precg"               "GRAUPEL PRECIPITATION RATE"     "KG/M2/S"
+state    real    qlsink          ikj    misc        1         -      rhdu      "qlsink"              "CLOUD WATER SINK"               "/S"
+state    real    precr           ikj    misc        1         -      rhdu      "precr"               "RAIN PRECIPITATION RATE"        "KG/M2/S"
+state    real    preci           ikj    misc        1         -      rhdu      "preci"               "ICE PRECIPITATION RATE"         "KG/M2/S"
+state    real    precs           ikj    misc        1         -      rhdu      "precs"               "SNOW PRECIPITATION RATE"        "KG/M2/S"
+state    real    precg           ikj    misc        1         -      rhdu      "precg"               "GRAUPEL PRECIPITATION RATE"     "KG/M2/S"
 
 #
 # Timing variables for chemistry
@@ -63,6 +63,80 @@ state    real    EVAPPROD       ikjf     wetscav_frcing        1         -
 # Anthropogenic emissions
 #
 state   real     -            i+jf     emis_ant     -         -      -       -                     "Anthropogenic Emissions"         ""
+#TO2
+##
+# Tracer emissions
+#
+# 
+state    real  e_tracer_1           i+jf     emis_ant     1         Z      i5r    "E_TRACER_1"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_2           i+jf     emis_ant     1         Z      i5r    "E_TRACER_2"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_3           i+jf     emis_ant     1         Z      i5r    "E_TRACER_3"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_4           i+jf     emis_ant     1         Z      i5r    "E_TRACER_4"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_5           i+jf     emis_ant     1         Z      i5r    "E_TRACER_5"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_6           i+jf     emis_ant     1         Z      i5r    "E_TRACER_6"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_7           i+jf     emis_ant     1         Z      i5r    "E_TRACER_7"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_8           i+jf     emis_ant     1         Z      i5r    "E_TRACER_8"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_9           i+jf     emis_ant     1         Z      i5r    "E_TRACER_9"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_10           i+jf     emis_ant     1         Z      i5r    "E_TRACER_10"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_11           i+jf     emis_ant     1         Z      i5r    "E_TRACER_11"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_12           i+jf     emis_ant     1         Z      i5r    "E_TRACER_12"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_13           i+jf     emis_ant     1         Z      i5r    "E_TRACER_13"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_14           i+jf     emis_ant     1         Z      i5r    "E_TRACER_14"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_15           i+jf     emis_ant     1         Z      i5r    "E_TRACER_15"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_16           i+jf     emis_ant     1         Z      i5r    "E_TRACER_16"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_17           i+jf     emis_ant     1         Z      i5r    "E_TRACER_17"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_18           i+jf     emis_ant     1         Z      i5r    "E_TRACER_18"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_19           i+jf     emis_ant     1         Z      i5r    "E_TRACER_19"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_20           i+jf     emis_ant     1         Z      i5r    "E_TRACER_20"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_21           i+jf     emis_ant     1         Z      i5r    "E_TRACER_21"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_22           i+jf     emis_ant     1         Z      i5r    "E_TRACER_22"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_23           i+jf     emis_ant     1         Z      i5r    "E_TRACER_23"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_24           i+jf     emis_ant     1         Z      i5r    "E_TRACER_24"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_25           i+jf     emis_ant     1         Z      i5r    "E_TRACER_25"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_26           i+jf     emis_ant     1         Z      i5r    "E_TRACER_26"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_27           i+jf     emis_ant     1         Z      i5r    "E_TRACER_27"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_28           i+jf     emis_ant     1         Z      i5r    "E_TRACER_28"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_29           i+jf     emis_ant     1         Z      i5r    "E_TRACER_29"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_30           i+jf     emis_ant     1         Z      i5r    "E_TRACER_30"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_31           i+jf     emis_ant     1         Z      i5r    "E_TRACER_31"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  e_tracer_32           i+jf     emis_ant     1         Z      i5r    "E_TRACER_32"                "EMISSIONS"          "ug m^-2 sec^-1"
+state    real  ef_tracer_1           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_1"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_2           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_2"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_3           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_3"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_4           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_4"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_5           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_5"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_6           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_6"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_7           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_7"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_8           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_8"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_9           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_9"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_10           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_10"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_11           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_11"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_12           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_12"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_13           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_13"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_14           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_14"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_15           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_15"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_16           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_16"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_17           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_17"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_18           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_18"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_19           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_19"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_20           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_20"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_21           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_21"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_22           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_22"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_23           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_23"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_24           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_24"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_25           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_25"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_26           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_26"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_27           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_27"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_28           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_28"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_29           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_29"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_30           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_30"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_31           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_31"                "EMISSION FLAG"          "0-1"
+state    real  ef_tracer_32           i+jf     emis_ant     1         Z      i5r    "EF_TRACER_32"                "EMISSION FLAG"          "0-1"
+#TO2
+
+
+
+
 state    real  e_iso          i+jf     emis_ant     1         Z      i5r    "E_ISO"               "Isoprene EMISSIONS (Anth. for RADM/RACM, Anth+Bio for CBMZ)"  "mol km^-2 hr^-1"
 state    real  e_so2          i+jf     emis_ant     1         Z      i5r    "E_SO2"               "EMISSIONS"          "mol km^-2 hr^-1"
 state    real  e_no           i+jf     emis_ant     1         Z      i5r    "E_NO"                "EMISSIONS"          "mol km^-2 hr^-1"
@@ -2363,26 +2437,38 @@ state    real  ra19co2      ikjftb      chem        1         -    i0{12}rhusdf=
 
 #tracer variables inside the chem array...for ensemble run or not
 #
-state   real   tracer_1    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_1"             "tracer1    mix ratio"        "ppmv"
-state   real   tracer_2    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_2"             "tracer2    mix ratio"        "ppmv"
-state   real   tracer_3    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_3"             "tracer3    mix ratio"        "ppmv"
-state   real   tracer_4    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_4"             "tracer4    mix ratio"        "ppmv"
-state   real   tracer_5    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_5"             "tracer5    mix ratio"        "ppmv"
-state   real   tracer_6    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_6"             "tracer6    mix ratio"        "ppmv"
-state   real   tracer_7    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_7"             "tracer7    mix ratio"        "ppmv"
-state   real   tracer_8    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_8"             "tracer8    mix ratio"        "ppmv"
-state   real   tracer_9    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_9"             "tracer9    mix ratio"        "ppmv"
-state   real   tracer_10    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_10"             "tracer10    mix ratio"        "ppmv"
-state   real   tracer_11    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_11"             "tracer11    mix ratio"        "ppmv"
-state   real   tracer_12    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_12"             "tracer12    mix ratio"        "ppmv"
-state   real   tracer_13    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_13"             "tracer13    mix ratio"        "ppmv"
-state   real   tracer_14    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_14"             "tracer14    mix ratio"        "ppmv"
-state   real   tracer_15    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_15"             "tracer15    mix ratio"        "ppmv"
-state   real   tracer_16    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_16"             "tracer16    mix ratio"        "ppmv"
-state   real   tracer_17    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_17"             "tracer17    mix ratio"        "ppmv"
-state   real   tracer_18    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_18"             "tracer18    mix ratio"        "ppmv"
-state   real   tracer_19    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_19"             "tracer19    mix ratio"        "ppmv"
-state   real   tracer_20    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_20"             "tracer20    mix ratio"        "ppmv"
+state   real   tracer_1    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_1"             "tracer1    mix ratio"        "ug/kg-dryair"
+state   real   tracer_2    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_2"             "tracer2    mix ratio"        "ug/kg-dryair"
+state   real   tracer_3    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_3"             "tracer3    mix ratio"        "ug/kg-dryair"
+state   real   tracer_4    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_4"             "tracer4    mix ratio"        "ug/kg-dryair"
+state   real   tracer_5    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_5"             "tracer5    mix ratio"        "ug/kg-dryair"
+state   real   tracer_6    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_6"             "tracer6    mix ratio"        "ug/kg-dryair"
+state   real   tracer_7    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_7"             "tracer7    mix ratio"        "ug/kg-dryair"
+state   real   tracer_8    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_8"             "tracer8    mix ratio"        "ug/kg-dryair"
+state   real   tracer_9    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_9"             "tracer9    mix ratio"        "ug/kg-dryair"
+state   real   tracer_10    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_10"             "tracer10    mix ratio"        "ug/kg-dryair"
+state   real   tracer_11    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_11"             "tracer11    mix ratio"        "ug/kg-dryair"
+state   real   tracer_12    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_12"             "tracer12    mix ratio"        "ug/kg-dryair"
+state   real   tracer_13    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_13"             "tracer13    mix ratio"        "ug/kg-dryair"
+state   real   tracer_14    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_14"             "tracer14    mix ratio"        "ug/kg-dryair"
+state   real   tracer_15    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_15"             "tracer15    mix ratio"        "ug/kg-dryair"
+state   real   tracer_16    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_16"             "tracer16    mix ratio"        "ug/kg-dryair"
+state   real   tracer_17    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_17"             "tracer17    mix ratio"        "ug/kg-dryair"
+state   real   tracer_18    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_18"             "tracer18    mix ratio"        "ug/kg-dryair"
+state   real   tracer_19    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_19"             "tracer19    mix ratio"        "ug/kg-dryair"
+state   real   tracer_20    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_20"             "tracer20    mix ratio"        "ug/kg-dryair"
+state   real   tracer_21    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_21"             "tracer21    mix ratio"        "ug/kg-dryair"
+state   real   tracer_22    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_22"             "tracer22    mix ratio"        "ug/kg-dryair"
+state   real   tracer_23    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_23"             "tracer23    mix ratio"        "ug/kg-dryair"
+state   real   tracer_24    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_24"             "tracer24    mix ratio"        "ug/kg-dryair"
+state   real   tracer_25    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_25"             "tracer25    mix ratio"        "ug/kg-dryair"
+state   real   tracer_26    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_26"             "tracer26    mix ratio"        "ug/kg-dryair"
+state   real   tracer_27    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_27"             "tracer27    mix ratio"        "ug/kg-dryair"
+state   real   tracer_28    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_28"             "tracer28    mix ratio"        "ug/kg-dryair"
+state   real   tracer_29    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_29"             "tracer29    mix ratio"        "ug/kg-dryair"
+state   real   tracer_30    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_30"             "tracer30    mix ratio"        "ug/kg-dryair"
+state   real   tracer_31    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_31"             "tracer31    mix ratio"        "ug/kg-dryair"
+state   real   tracer_32    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_32"             "tracer32    mix ratio"        "ug/kg-dryair"
 state   real   tracer_ens    ikjftb   chem        1         -   i0{12}rhusdf=(bdy_interp:dt)  "tracer_ens"             "tracer- ensemble average    mix ratio"        "ppmv"
 
 state   real    -          ikjftb  tracer        1         -     -    -                                       
@@ -4229,6 +4315,7 @@ package   chem_tracer   chem_opt==13                 -             chem:so2,no,a
 #jcr pour les traceurs
 # package   chem_trace2   chem_opt==14                 -             chem:tracer_1
 package   chem_trace2   chem_opt==14                 -             chem:tracer_1,tracer_2,tracer_3,tracer_4,tracer_5,tracer_6,tracer_7,tracer_8,tracer_9,tracer_10,tracer_11,tracer_12,tracer_13,tracer_14,tracer_15,tracer_16,tracer_17,tracer_18,tracer_19,tracer_20,tracer_ens
+package   chem_trace4   chem_opt==19                 -             chem:tracer_1,tracer_2,tracer_3,tracer_4,tracer_5,tracer_6,tracer_7,tracer_8,tracer_9,tracer_10,tracer_11,tracer_12,tracer_13,tracer_14,tracer_15,tracer_16,tracer_17,tracer_18,tracer_19,tracer_20,tracer_21,tracer_22,tracer_23,tracer_24,tracer_25,tracer_26,tracer_27,tracer_28,tracer_29,tracer_30,tracer_31,tracer_32,tracer_ens
 package   chem_trace_ens   chem_opt==15              -             chem:tracer_1,tracer_2,tracer_3,tracer_4,tracer_5,tracer_6,tracer_7,tracer_8,tracer_9,tracer_10,tracer_11,tracer_12,tracer_13,tracer_14,tracer_15,tracer_16,tracer_17,tracer_18,tracer_19,tracer_20,tracer_ens
 
 # GHG chem packages, passive tracers
@@ -4378,6 +4465,10 @@ package   eco2            emiss_opt==16                  -             emis_ant:
 package   eghg            emiss_opt==17                  -             emis_ant:e_co2,e_co2tst,e_co,e_cotst,e_ch4,e_ch4tst
 package   ecrimech        emiss_opt==19                   -             emis_ant:e_co,e_no,e_no2,e_so2,e_nh3,e_c2h6,e_c3h8,e_c2h4,e_c3h6,e_c5h8,e_tm123b,e_tm124b,e_tm135b,e_oethtol,e_methtol,e_pethtol,e_dime35eb,e_hcho,e_ch3cho,e_c2h5cho,e_ket,e_mek,e_ch3oh,e_c2h5oh,e_c2h2,e_benzene,e_nc4h10,e_toluene,e_oxyl,e_tbut2ene,e_ch3co2h
 package   ecrimechtno     emiss_opt==20                  -             emis_ant:e_co,e_no,e_no2,e_so2,e_nh3,e_c2h6,e_c3h8,e_c2h4,e_c3h6,e_c5h8,e_tm123b,e_tm124b,e_tm135b,e_oethtol,e_methtol,e_pethtol,e_dime35eb,e_hcho,e_ch3cho,e_c2h5cho,e_ket,e_mek,e_ch3oh,e_c2h5oh,e_c2h2,e_benzene,e_nc4h10,e_toluene,e_oxyl,e_tbut2ene,e_ch3co2h,e_bc_1,e_ec_1_25,e_ec_25_10,e_oc_dom,e_oc_tra,e_oc_25_10,e_pm25,e_oin_25,e_oin_10
+#to2
+#package   etracer     emiss_opt==30                  -             emis_ant:e_tracer_1,e_tracer_2,e_tracer_3,e_tracer_4,e_tracer_5,e_tracer_6,e_tracer_7,e_tracer_8,e_tracer_9,e_tracer_10,e_tracer_11,e_tracer_12,e_tracer_13,e_tracer_14,e_tracer_15,e_tracer_16,e_tracer_17,e_tracer_18,e_tracer_19,e_tracer_20,e_tracer_ens,ef_tracer_1,ef_tracer_2,ef_tracer_3,ef_tracer_4,ef_tracer_5,ef_tracer_6,ef_tracer_7,ef_tracer_8,ef_tracer_9,ef_tracer_10,ef_tracer_11,ef_tracer_12,ef_tracer_13,ef_tracer_14,ef_tracer_15,ef_tracer_16,ef_tracer_17,ef_tracer_18,ef_tracer_19,ef_tracer_20,ef_tracer_ens
+package   etracer     emiss_opt==30                  -             emis_ant:e_tracer_1,e_tracer_2,e_tracer_3,e_tracer_4,e_tracer_5,e_tracer_6,e_tracer_7,e_tracer_8,e_tracer_9,e_tracer_10,e_tracer_11,e_tracer_12,e_tracer_13,e_tracer_14,e_tracer_15,e_tracer_16,e_tracer_17,e_tracer_18,e_tracer_19,e_tracer_20,e_tracer_21,e_tracer_22,e_tracer_23,e_tracer_24,e_tracer_25,e_tracer_26,e_tracer_27,e_tracer_28,e_tracer_29,e_tracer_30,e_tracer_31,e_tracer_32,ef_tracer_1,ef_tracer_2,ef_tracer_3,ef_tracer_4,ef_tracer_5,ef_tracer_6,ef_tracer_7,ef_tracer_8,ef_tracer_9,ef_tracer_10,ef_tracer_11,ef_tracer_12,ef_tracer_13,ef_tracer_14,ef_tracer_15,ef_tracer_16,ef_tracer_17,ef_tracer_18,ef_tracer_19,ef_tracer_20,ef_tracer_21,ef_tracer_22,ef_tracer_23,ef_tracer_24,ef_tracer_25,ef_tracer_26,ef_tracer_27,ef_tracer_28,ef_tracer_29,ef_tracer_30,ef_tracer_31,ef_tracer_32
+#to2
 #
 package   vash    emiss_opt_vol==1                   -             emis_vol:e_vash1,e_vash2,e_vash3,e_vash4,e_vash5,e_vash6,e_vash7,e_vash8,e_vash9,e_vash10
 package   vashso2 emiss_opt_vol==2                   -             emis_vol:e_vash1,e_vash2,e_vash3,e_vash4,e_vash5,e_vash6,e_vash7,e_vash8,e_vash9,e_vash10,e_vso2
diff --git a/chem/chem_driver.F b/chem/chem_driver.F
index b9741bf5..bd55ee01 100755
--- a/chem/chem_driver.F
+++ b/chem/chem_driver.F
@@ -708,7 +708,7 @@
      CASE (CB05_SORG_VBS_AQ_KPP)
        CALL wrf_debug(15,'calling cb05_sorg_vbs_aq_kpp from chem_driver')
        haveaer = .true.
-    CASE (CHEM_TRACER,CHEM_TRACE2)
+    CASE (CHEM_TRACER,CHEM_TRACE2,CHEM_TRACE4)
        CALL wrf_debug(15,'tracer mode: only doing emissions and dry dep in chem_driver')
     CASE (CHEM_VOLC)
        CALL wrf_debug(15,'Full Volcanic Ash mode: doing emissions (SO2 + ASH), settling, and subgrid transport in chem_driver')
@@ -1016,6 +1016,7 @@
            config_flags%chem_opt /= CHEM_VOLC_4BIN .and. &
            config_flags%chem_opt /= DUST .and. &
            config_flags%chem_opt /= CHEM_TRACE2 .and. &
+           config_flags%chem_opt /= CHEM_TRACE4 .and. &
            config_flags%chem_opt /= CO2_TRACER  .and. &
            config_flags%chem_opt /= GHG_TRACER ) then
          call wrf_debug(15,'calling optical driver')
@@ -1218,6 +1219,7 @@
            config_flags%chem_opt /= CHEM_VOLC_4BIN .and. &
            config_flags%chem_opt /= DUST .and. &
            config_flags%chem_opt /= CHEM_TRACE2 .and. &
+           config_flags%chem_opt /= CHEM_TRACE4 .and. &
            config_flags%chem_opt /= CO2_TRACER  .and. &
            config_flags%chem_opt /= GHG_TRACER  ) then
          call wrf_debug(15,'calling photolysis driver')
@@ -1491,6 +1493,7 @@
           config_flags%chem_opt /= CHEM_VOLC_4BIN .and. &
           config_flags%chem_opt /= DUST .and. &
           config_flags%chem_opt /= CHEM_TRACE2 .and. &
+          config_flags%chem_opt /= CHEM_TRACE4 .and. &
           config_flags%chem_opt /= CO2_TRACER  .and. &
           config_flags%chem_opt /= GHG_TRACER ) then
 
diff --git a/chem/dry_dep_driver.F b/chem/dry_dep_driver.F
index 708a2d1d..0c34bc28 100755
--- a/chem/dry_dep_driver.F
+++ b/chem/dry_dep_driver.F
@@ -285,6 +285,7 @@ CONTAINS
 
        IF( config_flags%chem_opt /= CHEM_TRACER    .and.                  &
            config_flags%chem_opt /= CHEM_TRACE2    .and.                  &
+           config_flags%chem_opt /= CHEM_TRACE4    .and.                  &
            config_flags%chem_opt /= CO2_TRACER     .and.                  & 
            config_flags%chem_opt /= GHG_TRACER     .and.                  &
            config_flags%chem_opt /= CHEM_VASH      .and.                  &
diff --git a/chem/emissions_driver.F b/chem/emissions_driver.F
index 87778b4f..d342f2b6 100644
--- a/chem/emissions_driver.F
+++ b/chem/emissions_driver.F
@@ -1305,6 +1305,167 @@ real, save :: freq_industry(24)    = &
           end do
        end do
 !jcr
+!to2
+   CASE (CHEM_TRACE4)
+     call wrf_debug(15,'CHEM_TRACE4 is selected ......')
+     !if(config_flags%emiss_opt == 30 ) then
+       do j=jts,jte
+          do i=its,ite
+             do k=kts,min(config_flags%kemit,kte-ksub)
+                !conv = alt(i,k,j)*dtstep/dz8w(i,k,j)
+                !conversion to [ug/kg dry air] per air.
+                !emis_ant : [ug/m2/sec]
+                !
+                !conv     : alt[m3/kg air]
+                !           dstep  [sec]
+                !           dz8w   [m]
+                conv = alt(i,k,j)*dtstep/(dz8w(i,k,j))
+                chem(i,k,j,p_tracer_1)  = chem(i,k,j,p_tracer_1)         &
+                     +emis_ant(i,k,j,p_e_tracer_1)*conv
+                chem(i,k,j,p_tracer_2)  = chem(i,k,j,p_tracer_2)         &
+                     +emis_ant(i,k,j,p_e_tracer_2)*conv
+                chem(i,k,j,p_tracer_3)  = chem(i,k,j,p_tracer_3)         &
+                     +emis_ant(i,k,j,p_e_tracer_3)*conv
+                chem(i,k,j,p_tracer_4)  = chem(i,k,j,p_tracer_4)         &
+                     +emis_ant(i,k,j,p_e_tracer_4)*conv
+                chem(i,k,j,p_tracer_5)  = chem(i,k,j,p_tracer_5)         &
+                     +emis_ant(i,k,j,p_e_tracer_5)*conv
+                chem(i,k,j,p_tracer_6)  = chem(i,k,j,p_tracer_6)         &
+                     +emis_ant(i,k,j,p_e_tracer_6)*conv
+                chem(i,k,j,p_tracer_7)  = chem(i,k,j,p_tracer_7)         &
+                     +emis_ant(i,k,j,p_e_tracer_7)*conv
+                chem(i,k,j,p_tracer_8)  = chem(i,k,j,p_tracer_8)         &
+                     +emis_ant(i,k,j,p_e_tracer_8)*conv
+                chem(i,k,j,p_tracer_9)  = chem(i,k,j,p_tracer_9)         &
+                     +emis_ant(i,k,j,p_e_tracer_9)*conv
+                chem(i,k,j,p_tracer_10)  = chem(i,k,j,p_tracer_10)       &
+                     +emis_ant(i,k,j,p_e_tracer_10)*conv
+                chem(i,k,j,p_tracer_11)  = chem(i,k,j,p_tracer_11)       &
+                     +emis_ant(i,k,j,p_e_tracer_11)*conv
+                chem(i,k,j,p_tracer_12)  = chem(i,k,j,p_tracer_12)       &
+                     +emis_ant(i,k,j,p_e_tracer_12)*conv
+                chem(i,k,j,p_tracer_13)  = chem(i,k,j,p_tracer_13)       &
+                     +emis_ant(i,k,j,p_e_tracer_13)*conv
+                chem(i,k,j,p_tracer_14)  = chem(i,k,j,p_tracer_14)       &
+                     +emis_ant(i,k,j,p_e_tracer_14)*conv
+                chem(i,k,j,p_tracer_15)  = chem(i,k,j,p_tracer_15)       &
+                     +emis_ant(i,k,j,p_e_tracer_15)*conv
+                chem(i,k,j,p_tracer_16)  = chem(i,k,j,p_tracer_16)       &
+                     +emis_ant(i,k,j,p_e_tracer_16)*conv
+                chem(i,k,j,p_tracer_17)  = chem(i,k,j,p_tracer_17)       &
+                     +emis_ant(i,k,j,p_e_tracer_17)*conv
+                chem(i,k,j,p_tracer_18)  = chem(i,k,j,p_tracer_18)       &
+                     +emis_ant(i,k,j,p_e_tracer_18)*conv
+                chem(i,k,j,p_tracer_19)  = chem(i,k,j,p_tracer_19)       &
+                     +emis_ant(i,k,j,p_e_tracer_19)*conv
+                chem(i,k,j,p_tracer_20)  = chem(i,k,j,p_tracer_20)       &
+                     +emis_ant(i,k,j,p_e_tracer_20)*conv
+                chem(i,k,j,p_tracer_21)  = chem(i,k,j,p_tracer_21)       &
+                     +emis_ant(i,k,j,p_e_tracer_21)*conv
+                chem(i,k,j,p_tracer_22)  = chem(i,k,j,p_tracer_22)       &
+                     +emis_ant(i,k,j,p_e_tracer_22)*conv
+                chem(i,k,j,p_tracer_23)  = chem(i,k,j,p_tracer_23)       &
+                     +emis_ant(i,k,j,p_e_tracer_23)*conv
+                chem(i,k,j,p_tracer_24)  = chem(i,k,j,p_tracer_24)       &
+                     +emis_ant(i,k,j,p_e_tracer_24)*conv
+                chem(i,k,j,p_tracer_25)  = chem(i,k,j,p_tracer_25)       &
+                     +emis_ant(i,k,j,p_e_tracer_25)*conv
+                chem(i,k,j,p_tracer_26)  = chem(i,k,j,p_tracer_26)       &
+                     +emis_ant(i,k,j,p_e_tracer_26)*conv
+                chem(i,k,j,p_tracer_27)  = chem(i,k,j,p_tracer_27)       &
+                     +emis_ant(i,k,j,p_e_tracer_27)*conv
+                chem(i,k,j,p_tracer_28)  = chem(i,k,j,p_tracer_28)       &
+                     +emis_ant(i,k,j,p_e_tracer_28)*conv
+                chem(i,k,j,p_tracer_29)  = chem(i,k,j,p_tracer_29)       &
+                     +emis_ant(i,k,j,p_e_tracer_29)*conv
+                chem(i,k,j,p_tracer_30)  = chem(i,k,j,p_tracer_30)       &
+                     +emis_ant(i,k,j,p_e_tracer_30)*conv
+                chem(i,k,j,p_tracer_31)  = chem(i,k,j,p_tracer_31)       &
+                     +emis_ant(i,k,j,p_e_tracer_31)*conv
+                chem(i,k,j,p_tracer_32)  = chem(i,k,j,p_tracer_32)       &
+                     +emis_ant(i,k,j,p_e_tracer_32)*conv
+                chem(i,k,j,p_tracer_ens) = chem(i,k,j,p_tracer_1  )      &
+                                         + chem(i,k,j,p_tracer_2  )      &
+                                         + chem(i,k,j,p_tracer_3  )      &
+                                         + chem(i,k,j,p_tracer_4  )      &
+                                         + chem(i,k,j,p_tracer_5  )      &
+                                         + chem(i,k,j,p_tracer_6  )      &
+                                         + chem(i,k,j,p_tracer_7  )      &
+                                         + chem(i,k,j,p_tracer_8  )      &
+                                         + chem(i,k,j,p_tracer_9  )      &
+                                         + chem(i,k,j,p_tracer_10 )      &
+                                         + chem(i,k,j,p_tracer_11 )      &
+                                         + chem(i,k,j,p_tracer_12 )      &
+                                         + chem(i,k,j,p_tracer_13 )      &
+                                         + chem(i,k,j,p_tracer_14 )      &
+                                         + chem(i,k,j,p_tracer_15 )      &
+                                         + chem(i,k,j,p_tracer_16 )      &
+                                         + chem(i,k,j,p_tracer_17 )      &
+                                         + chem(i,k,j,p_tracer_18 )      &
+                                         + chem(i,k,j,p_tracer_19 )      &
+                                         + chem(i,k,j,p_tracer_20 )      &   
+                                         + chem(i,k,j,p_tracer_21 )      &
+                                         + chem(i,k,j,p_tracer_22 )      &
+                                         + chem(i,k,j,p_tracer_23 )      &
+                                         + chem(i,k,j,p_tracer_24 )      &
+                                         + chem(i,k,j,p_tracer_25 )      &
+                                         + chem(i,k,j,p_tracer_26 )      &
+                                         + chem(i,k,j,p_tracer_27 )      &
+                                         + chem(i,k,j,p_tracer_28 )      &
+                                         + chem(i,k,j,p_tracer_29 )      &
+                                         + chem(i,k,j,p_tracer_30 )      &
+                                         + chem(i,k,j,p_tracer_31 )      &
+                                         + chem(i,k,j,p_tracer_32 )         
+             end do
+          end do
+       end do
+       !!! do j=jts,jte
+       !!!    do i=its,ite
+       !!!       do k=kts,kte
+       !!!          chem(i,k,j,p_tracer_1)   =  chem(i,k,j,p_tracer_1)  * emis_ant(i,kts,j,p_ef_tracer_1 ) 
+       !!!          if(i.eq.ite.and.j.eq.jte.and.k.eq.kts) then
+       !!!            write(message,'("check i,kts,j (ef) = ",3i8)') i,kts,j 
+       !!!            call wrf_debug(15,message)
+       !!!            write(message,'("check emis_ant (ef) = ",f12.5)') emis_ant(i,kts,j,p_ef_tracer_1) 
+       !!!            call wrf_debug(15,message)
+       !!!            write(message,'("check emis_ant (ef) = ",f12.5)') emis_ant(i,kts,j,p_ef_tracer_2) 
+       !!!            call wrf_debug(15,message)
+       !!!          endif 
+       !!!          chem(i,k,j,p_tracer_2)   =  chem(i,k,j,p_tracer_2)  * emis_ant(i,kts,j,p_ef_tracer_2 )  
+       !!!          chem(i,k,j,p_tracer_3)   =  chem(i,k,j,p_tracer_3)  * emis_ant(i,kts,j,p_ef_tracer_3 )  
+       !!!          chem(i,k,j,p_tracer_4)   =  chem(i,k,j,p_tracer_4)  * emis_ant(i,kts,j,p_ef_tracer_4 )  
+       !!!          chem(i,k,j,p_tracer_5)   =  chem(i,k,j,p_tracer_5)  * emis_ant(i,kts,j,p_ef_tracer_5 )  
+       !!!          chem(i,k,j,p_tracer_6)   =  chem(i,k,j,p_tracer_6)  * emis_ant(i,kts,j,p_ef_tracer_6 )  
+       !!!          chem(i,k,j,p_tracer_7)   =  chem(i,k,j,p_tracer_7)  * emis_ant(i,kts,j,p_ef_tracer_7 )  
+       !!!          chem(i,k,j,p_tracer_8)   =  chem(i,k,j,p_tracer_8)  * emis_ant(i,kts,j,p_ef_tracer_8 )  
+       !!!          chem(i,k,j,p_tracer_9)   =  chem(i,k,j,p_tracer_9)  * emis_ant(i,kts,j,p_ef_tracer_9 )  
+       !!!          chem(i,k,j,p_tracer_10)  =  chem(i,k,j,p_tracer_10) * emis_ant(i,kts,j,p_ef_tracer_10)  
+       !!!          chem(i,k,j,p_tracer_11)  =  chem(i,k,j,p_tracer_11) * emis_ant(i,kts,j,p_ef_tracer_11)  
+       !!!          chem(i,k,j,p_tracer_12)  =  chem(i,k,j,p_tracer_12) * emis_ant(i,kts,j,p_ef_tracer_12)  
+       !!!          chem(i,k,j,p_tracer_13)  =  chem(i,k,j,p_tracer_13) * emis_ant(i,kts,j,p_ef_tracer_13)  
+       !!!          chem(i,k,j,p_tracer_14)  =  chem(i,k,j,p_tracer_14) * emis_ant(i,kts,j,p_ef_tracer_14)  
+       !!!          chem(i,k,j,p_tracer_15)  =  chem(i,k,j,p_tracer_15) * emis_ant(i,kts,j,p_ef_tracer_15)  
+       !!!          chem(i,k,j,p_tracer_16)  =  chem(i,k,j,p_tracer_16) * emis_ant(i,kts,j,p_ef_tracer_16)  
+       !!!          chem(i,k,j,p_tracer_17)  =  chem(i,k,j,p_tracer_17) * emis_ant(i,kts,j,p_ef_tracer_17)  
+       !!!          chem(i,k,j,p_tracer_18)  =  chem(i,k,j,p_tracer_18) * emis_ant(i,kts,j,p_ef_tracer_18)  
+       !!!          chem(i,k,j,p_tracer_19)  =  chem(i,k,j,p_tracer_19) * emis_ant(i,kts,j,p_ef_tracer_19)  
+       !!!          chem(i,k,j,p_tracer_20)  =  chem(i,k,j,p_tracer_20) * emis_ant(i,kts,j,p_ef_tracer_20)  
+       !!!          chem(i,k,j,p_tracer_21)  =  chem(i,k,j,p_tracer_21) * emis_ant(i,kts,j,p_ef_tracer_21)  
+       !!!          chem(i,k,j,p_tracer_22)  =  chem(i,k,j,p_tracer_22) * emis_ant(i,kts,j,p_ef_tracer_22)  
+       !!!          chem(i,k,j,p_tracer_23)  =  chem(i,k,j,p_tracer_23) * emis_ant(i,kts,j,p_ef_tracer_23)  
+       !!!          chem(i,k,j,p_tracer_24)  =  chem(i,k,j,p_tracer_24) * emis_ant(i,kts,j,p_ef_tracer_24)  
+       !!!          chem(i,k,j,p_tracer_25)  =  chem(i,k,j,p_tracer_25) * emis_ant(i,kts,j,p_ef_tracer_25)  
+       !!!          chem(i,k,j,p_tracer_26)  =  chem(i,k,j,p_tracer_26) * emis_ant(i,kts,j,p_ef_tracer_26)  
+       !!!          chem(i,k,j,p_tracer_27)  =  chem(i,k,j,p_tracer_27) * emis_ant(i,kts,j,p_ef_tracer_27)  
+       !!!          chem(i,k,j,p_tracer_28)  =  chem(i,k,j,p_tracer_28) * emis_ant(i,kts,j,p_ef_tracer_28)  
+       !!!          chem(i,k,j,p_tracer_29)  =  chem(i,k,j,p_tracer_29) * emis_ant(i,kts,j,p_ef_tracer_29)  
+       !!!          chem(i,k,j,p_tracer_30)  =  chem(i,k,j,p_tracer_30) * emis_ant(i,kts,j,p_ef_tracer_30)  
+       !!!          !chem(i,k,j,p_tracer_ens) =  chem(i,k,j,p_tracer_ens)* emis_ant(i,kts,j,p_ef_tracer_ens) 
+       !!!       end do
+       !!!    end do
+       !!! end do
+     !endif
+!to2
 !
     CASE(CO2_TRACER,GHG_TRACER)  ! for ghg_tracer package
 
diff --git a/chem/module_input_chem_data.F b/chem/module_input_chem_data.F
index 933f32bd..d6200524 100755
--- a/chem/module_input_chem_data.F
+++ b/chem/module_input_chem_data.F
@@ -383,6 +383,9 @@ SUBROUTINE setup_gasprofile_maps(chem_opt, numgas)
  case (CO2_TRACER,GHG_TRACER)
      call wrf_debug("setup_profile_maps: nothing done for the GHG options")
 
+  case (CHEM_TRACE4)
+     call wrf_debug("setup_profile_maps: nothing done for the CHEM_TRACE4 options")
+
   case default
      call wrf_error_fatal("setup_profile_maps: could not decipher chem_opt value")
 
@@ -745,6 +748,42 @@ SUBROUTINE input_chem_profile (si_grid)
    ELSE IF ( si_grid%chem_opt == CHEM_TRACE2 ) THEN
 !jcr       si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_1 ) = 0.08 \
       si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_1 ) = 1.e-12
+   ELSE IF ( si_grid%chem_opt == CHEM_TRACE4 ) THEN
+!jcr       si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_1 ) = 0.08 \
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_1 ) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_2 ) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_3 ) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_4 ) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_5 ) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_6 ) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_7 ) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_8 ) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_9 ) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_10) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_11) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_12) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_13) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_14) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_15) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_16) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_17) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_18) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_19) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_20) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_21) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_22) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_23) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_24) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_25) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_26) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_27) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_28) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_29) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_30) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_31) = 1.e-15
+      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_32) = 1.e-15
+!      si_grid%chem(ims:ime,kms:kme,jms:jme,p_TRACER_1 ) = 0.08
+!to2
    ELSE IF ( si_grid%chem_opt == CHEM_VASH ) THEN
       si_grid%chem(ims:ime,kms:kme,jms:jme,1:numgas ) = 0.
    ELSE IF ( si_grid%chem_opt == CHEM_VOLC ) THEN
@@ -1328,27 +1367,39 @@ SUBROUTINE input_chem_profile (si_grid)
 !jcr       chem = 0.08
 !jcr    endif
 !jcr
-    if( nch .eq. p_tracer_1  ) chem = 1.e-12
-    if( nch .eq. p_tracer_2  ) chem = 1.e-12
-    if( nch .eq. p_tracer_3  ) chem = 1.e-12
-    if( nch .eq. p_tracer_4  ) chem = 1.e-12
-    if( nch .eq. p_tracer_5  ) chem = 1.e-12
-    if( nch .eq. p_tracer_6  ) chem = 1.e-12
-    if( nch .eq. p_tracer_7  ) chem = 1.e-12
-    if( nch .eq. p_tracer_8  ) chem = 1.e-12
-    if( nch .eq. p_tracer_9  ) chem = 1.e-12
-    if( nch .eq. p_tracer_10 ) chem = 1.e-12
-    if( nch .eq. p_tracer_11 ) chem = 1.e-12
-    if( nch .eq. p_tracer_12 ) chem = 1.e-12
-    if( nch .eq. p_tracer_13 ) chem = 1.e-12
-    if( nch .eq. p_tracer_14 ) chem = 1.e-12
-    if( nch .eq. p_tracer_15 ) chem = 1.e-12
-    if( nch .eq. p_tracer_16 ) chem = 1.e-12
-    if( nch .eq. p_tracer_17 ) chem = 1.e-12
-    if( nch .eq. p_tracer_18 ) chem = 1.e-12
-    if( nch .eq. p_tracer_19 ) chem = 1.e-12
-    if( nch .eq. p_tracer_20 ) chem = 1.e-12
-    if( nch .eq. p_tracer_ens ) chem = 1.e-12
+    if( nch .eq. p_tracer_1  ) chem = 1.e-15
+    if( nch .eq. p_tracer_2  ) chem = 1.e-15
+    if( nch .eq. p_tracer_3  ) chem = 1.e-15
+    if( nch .eq. p_tracer_4  ) chem = 1.e-15
+    if( nch .eq. p_tracer_5  ) chem = 1.e-15
+    if( nch .eq. p_tracer_6  ) chem = 1.e-15
+    if( nch .eq. p_tracer_7  ) chem = 1.e-15
+    if( nch .eq. p_tracer_8  ) chem = 1.e-15
+    if( nch .eq. p_tracer_9  ) chem = 1.e-15
+    if( nch .eq. p_tracer_10 ) chem = 1.e-15
+    if( nch .eq. p_tracer_11 ) chem = 1.e-15
+    if( nch .eq. p_tracer_12 ) chem = 1.e-15
+    if( nch .eq. p_tracer_13 ) chem = 1.e-15
+    if( nch .eq. p_tracer_14 ) chem = 1.e-15
+    if( nch .eq. p_tracer_15 ) chem = 1.e-15
+    if( nch .eq. p_tracer_16 ) chem = 1.e-15
+    if( nch .eq. p_tracer_17 ) chem = 1.e-15
+    if( nch .eq. p_tracer_18 ) chem = 1.e-15
+    if( nch .eq. p_tracer_19 ) chem = 1.e-15
+    if( nch .eq. p_tracer_20 ) chem = 1.e-15
+    if( nch .eq. p_tracer_21 ) chem = 1.e-15
+    if( nch .eq. p_tracer_22 ) chem = 1.e-15
+    if( nch .eq. p_tracer_23 ) chem = 1.e-15
+    if( nch .eq. p_tracer_24 ) chem = 1.e-15
+    if( nch .eq. p_tracer_25 ) chem = 1.e-15
+    if( nch .eq. p_tracer_26 ) chem = 1.e-15
+    if( nch .eq. p_tracer_27 ) chem = 1.e-15
+    if( nch .eq. p_tracer_28 ) chem = 1.e-15
+    if( nch .eq. p_tracer_29 ) chem = 1.e-15
+    if( nch .eq. p_tracer_30 ) chem = 1.e-15
+    if( nch .eq. p_tracer_31 ) chem = 1.e-15
+    if( nch .eq. p_tracer_32 ) chem = 1.e-15
+    if( nch .eq. p_tracer_ens ) chem = 1.e-15
 !jcr
 
 
@@ -1705,6 +1756,12 @@ END SUBROUTINE bdy_chem_value_ghg
           i_bdy_method = 5
       else if (config_flags%chem_opt == CHEM_TRACE2) then
           i_bdy_method = 5
+!to2
+      !else if (config_flags%chem_opt == CHEM_TRACE3) then
+      !    i_bdy_method = 5
+      else if (config_flags%chem_opt == CHEM_TRACE4) then
+          i_bdy_method = 5
+!to2
       else if (config_flags%chem_opt == GOCART_SIMPLE) then
           i_bdy_method = 7
       else if (config_flags%chem_opt == CB05_SORG_AQ_KPP) then
diff --git a/share/module_chem_share.F b/share/module_chem_share.F
index 890f8c43..ad1aede5 100644
--- a/share/module_chem_share.F
+++ b/share/module_chem_share.F
@@ -37,8 +37,13 @@ CONTAINS
         get_last_gas = p_co
 
      case (CHEM_TRACE2)
-        get_last_gas = p_tracer_1
-
+!jcr         get_last_gas = p_tracer_1
+        get_last_gas = p_tracer_ens
+!to2
+     case (CHEM_TRACE4)
+!to be modified
+        get_last_gas = p_tracer_ens
+!to2
      case (GOCART_SIMPLE)
         get_last_gas = p_msa
 
-- 
2.31.1

