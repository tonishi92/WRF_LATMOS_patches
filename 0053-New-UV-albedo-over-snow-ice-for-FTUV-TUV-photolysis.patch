From 21b6b2552d03ca4204575555113d819d75ec2754 Mon Sep 17 00:00:00 2001
From: tonishi92 <tatsuo.onishi@gmail.com>
Date: Mon, 12 Dec 2022 12:21:27 +0100
Subject: [PATCH 53/71] New UV albedo over snow+ice for FTUV+TUV photolysis

Uses a higher UV-albedo over snow- and ice-covered surfaces in TUV and FTUV
photolysis. The snow/ice albedo value is taken as 0.85, and is weighted by the
snow and ice covers.

Source : L. Marelle

List of modified files:
	modified:   chem/module_ftuv_driver.F
	modified:   chem/module_phot_tuv.F
	modified:   chem/photolysis_driver.F
---
 chem/module_ftuv_driver.F | 33 +++++++++++++++++++++++++++++----
 chem/module_phot_tuv.F    | 20 ++++++++++++++++++--
 chem/photolysis_driver.F  |  2 ++
 3 files changed, 49 insertions(+), 6 deletions(-)

diff --git a/chem/module_ftuv_driver.F b/chem/module_ftuv_driver.F
index 0a3c1f6..255ab6f 100644
--- a/chem/module_ftuv_driver.F
+++ b/chem/module_ftuv_driver.F
@@ -29,6 +29,7 @@
 
       real(dp), private :: zref(nref), tref(nref), airref(nref), o3ref(nref)
       real(dp), private :: albedo(nw-1,2)
+      real(dp), private :: albedo_input(nw-1,2)
 
       type column_density
         integer           :: ncoldens_levs
@@ -129,6 +130,7 @@
                               p_phy, t_phy, rho_phy, p8w, t8w,         &
                               xlat, xlong,    z_at_w,                  &
                               moist, chem,gd_cloud,gd_cloud2,          &
+                              xice, snowc, snowh,                      &
                               ph_no2,ph_o31d,ph_o33p,ph_hono,          &
                               ph_hno3,ph_hno4,ph_no3o2,ph_no3o,        &
                               ph_h2o2,ph_ch2om,ph_ch2or,ph_ald,        &
@@ -185,6 +187,9 @@
                              t8w(ims:ime,kms:kme,jms:jme),       &
                              z_at_w(ims:ime,kms:kme,jms:jme)
 
+      real, dimension( ims:ime , jms:jme ),                      &
+            intent(in   ) :: snowh, snowc, xice
+
 !----------------------------------------------------
 ! these arrays are for cloudwater/ice coming from 
 ! grell convection, optional
@@ -268,6 +273,7 @@
                   waer600(kts:kte), waer999(kts:kte)
       real(dp) :: gaer300(kts:kte), gaer400(kts:kte),            &
                   gaer600(kts:kte), gaer999(kts:kte)
+      real(dp) :: seaiceconc, snowcover, snowheight
 
       real(dp) :: p_jtop(its:ite,jts:jte)
       real(dp) :: o2_exo_col(its:ite,jts:jte)
@@ -500,6 +506,10 @@ level_loop : &
           air(k) = .5_dp*air(k) + .25_dp*( air(k-1) + air(k+1) )
         enddo
 
+       seaiceconc = xice(i,j)
+       snowcover  = snowc(i,j)
+       snowheight = snowh(i,j)
+
        alat  = real(xlat(i,j),kind=dp)
        along = -real(xlong(i,j),kind=dp)
        call calc_zenith( alat, along, julday, gmtp, azim, zen )
@@ -526,6 +536,7 @@ level_loop : &
                    aant,                 &
                    aso4,                 &
                    asal,                 &
+                   seaiceconc, snowcover, snowheight, &
 ! rajesh: Add aerosol optical property columns as arguments
                    tauaer300, tauaer400, &
                    tauaer600, tauaer999, &
@@ -1003,7 +1014,9 @@ include 'netcdf.inc'
                         along, o3top, o2top, o3toms, lu, zin, tlevin, &
                         airlevin, rhin, xlwcin, o3in, acb1in, &
                         acb2in, aoc1in, aoc2in, aantin, aso4in, &
-                        asalin, tauaer300in,tauaer400in,tauaer600in,tauaer999in, &
+                        asalin, &
+                        seaiceconc, snowcover, snowheight, &
+                        tauaer300in,tauaer400in,tauaer600in,tauaer999in, &
                         waer300in, waer400in, waer600in, waer999in,    &
                         gaer300in, gaer400in, gaer600in, gaer999in,    &
                         aer_ra_feedback, prate, radfld, adjcoe, prate0 )
@@ -1024,6 +1037,7 @@ include 'netcdf.inc'
       real(dp), intent(in) :: o3toms
       real(dp), intent(in) :: o3top
       real(dp), intent(in) :: o2top
+      real(dp), intent(in) :: seaiceconc, snowcover, snowheight
 
       real(dp), intent(in) :: zin(nlev)
       real(dp), intent(in) :: tlevin(nlev)
@@ -1239,10 +1253,21 @@ include 'netcdf.inc'
       end if
 
 
-      call photoin( chem_opt, nz, zen, o3toms, esfact,           & 
-                    o3top, o2top, albedo(:,lu), z_ph, tlev_ph,   & 
+      ! Use a higher albedo over snow and ice
+      albedo_input(:,:) = albedo(:,:)
+      IF(seaiceconc .GT. 0.15) THEN
+        ! Sea ice concentrations < 15 % are ignored
+        ! Bare ice albedo assumed to be 0.85
+        albedo_input(:,2) = 0.85*seaiceconc + albedo(:,2) * (1. - seaiceconc)
+      ELSEIF(seaiceconc .EQ. 0.0 .AND. snowheight .GT. 0.01) THEN
+        ! Snow heights < 10 cm are ignored
+        ! Bare snow albedo assumed to be 0.85
+        albedo_input(:,1) = 0.85*snowcover + albedo(:,1) * (1. - snowcover)
+      ENDIF
+      call photoin( chem_opt, nz, zen, o3toms, esfact,           &
+                    o3top, o2top, albedo_input(:,lu), z_ph, tlev_ph,   &
                     tlay_ph, airlev_ph, rh_ph, xlwc_ph, o3_ph,   &
-                    acb1_ph, acb2_ph, aoc1_ph, aoc2_ph, aant_ph, & 
+                    acb1_ph, acb2_ph, aoc1_ph, aoc2_ph, aant_ph, &
                     aso4_ph, asal_ph,                            &
                     tauaer300_ph, tauaer400_ph, tauaer600_ph,    &
                     tauaer999_ph, waer300_ph, waer400_ph,        &
diff --git a/chem/module_phot_tuv.F b/chem/module_phot_tuv.F
index 4e2ddc5..b1831c1 100644
--- a/chem/module_phot_tuv.F
+++ b/chem/module_phot_tuv.F
@@ -39,6 +39,7 @@
    real, allocatable :: w_fac(:)
    real, allocatable :: etfl(:)
    real, allocatable :: albedo(:)
+   real, allocatable :: albedo_input(:)
    real, allocatable :: o2_xs(:)
    real, allocatable :: so2_xs(:)
    real, allocatable :: par_wght(:)
@@ -75,6 +76,7 @@
                gmt, julday, t_phy, moist, aerwrf,                         &
                p8w, t8w, p_phy, chem, rho_phy,                            &
                dz8w, xlat, xlong, z, z_at_w, gd_cloud, gd_cloud2,         &
+               xice, snowc, snowh,                      &
                bl_cld,bl_cld2,                                            &
                tauaer1,tauaer2,tauaer3,tauaer4,                           &
                gaer1,gaer2,gaer3,gaer4,                                   &
@@ -119,6 +121,8 @@
    REAL, DIMENSION( ims:ime, kms:kme, jms:jme ),                   &
          INTENT(INOUT ) ::                                         &
                gd_cloud,gd_cloud2,bl_cld,bl_cld2
+   real, dimension( ims:ime , jms:jme ),                               &
+            intent(in   ) :: snowh, snowc, xice
    REAL, DIMENSION( ims:ime, kms:kme, jms:jme ),              &
          INTENT(IN   ) :: tauaer1, tauaer2, tauaer3, tauaer4, &
                           waer1, waer2, waer3, waer4,         &
@@ -589,8 +593,20 @@ has_daylight : &
                                  + chem(i,kts+1:kte,j,p_no2)*dens_air(kts+1:kte))
          endif
 
+         ! Use a higher albedo over snow and ice
+         IF(xice(i,j) .GT. 0.15) THEN
+           ! Sea ice concentrations < 15 % are ignored
+           ! Bare ice albedo assumed to be 0.85
+           albedo_input(:) = 0.85*xice(i,j) + albedo(:) * (1. - xice(i,j))
+         ELSEIF(xice(i,j) .EQ. 0.0 .AND. snowh(i,j) .GT. 0.01) THEN
+           ! Snow heights < 10 cm are ignored
+           ! Bare snow albedo assumed to be 0.85
+           albedo_input(:) = 0.85*snowc(i,j) + albedo(:) * (1. - snowc(i,j))
+         ELSE
+           albedo_input(:) = albedo(:)
+         ENDIF
          call tuv_radfld( nlambda_start, config_flags%cld_od_opt, cldfrac, &
-              nlyr, nwave, zenith, tuv_z, albedo, &
+              nlyr, nwave, zenith, tuv_z, albedo_input, &
               aircol, o2col, o3col, so2col, no2col, &
               tauaer300, tauaer400, tauaer600, tauaer999, &
               waer300, waer400, waer600, waer999, &
@@ -1302,7 +1318,7 @@ master_proc_a: &
                 air_dens_data(n_air_dens_data),stat=astat )
       ierr = astat + ierr
       allocate( wl(nwave+1), wc(nwave), dw(nwave), w_fac(nwave), &
-                etfl(nwave), albedo(nwave), stat=astat )
+                etfl(nwave), albedo(nwave), albedo_input(nwave), stat=astat )
       ierr = astat + ierr
       if( .not. is_full_tuv ) then
         allocate( temp_tab(ntemp), conc_tab(nconc), stat=astat )
diff --git a/chem/photolysis_driver.F b/chem/photolysis_driver.F
index a7973f4..c98e15f 100755
--- a/chem/photolysis_driver.F
+++ b/chem/photolysis_driver.F
@@ -214,6 +214,7 @@
                               p_phy, t_phy, rho_phy, p8w, t8w,         &
                               xlat, xlong,    z_at_w,                  &
                               moist, chem, gd_cloud,gd_cloud2,         &
+                              xice, snowc, snowh,                      &
                               ph_no2,ph_o31d,ph_o33p,ph_hno2,          &
                               ph_hno3,ph_hno4,ph_no3o2,ph_no3o,        &
                               ph_h2o2,ph_ch2om,ph_ch2or,ph_ch3cho,     &
@@ -243,6 +244,7 @@
                gmt, julday, t_phy, moist, aerwrf,                      &
                p8w, t8w, p_phy, chem, rho_phy,                         &
                dz8w, xlat, xlong, z, z_at_w, gd_cloud, gd_cloud2,      &
+               xice, snowc, snowh,                                     &
                bl_cld,bl_cld2,                                         &
                tauaer1,tauaer2,tauaer3,tauaer4,                        &
                gaer1,gaer2,gaer3,gaer4,                                &
-- 
2.31.1

